import{_ as e,o as i,c as o,e as t}from"./app.e4b6e09b.js";const n={},s=t('<h3 id="how-to-test-read-permissioning" tabindex="-1"><a class="header-anchor" href="#how-to-test-read-permissioning" aria-hidden="true">#</a> How to test read permissioning?</h3><p>This is read and write permissioning CLI dApp with ethers extension library</p><ol><li><code>cd ../integration-library/vmbc-ethers-extension</code></li><li><code>npm install</code></li><li>In <code>read-write-authorization/dapp</code>, make sure you have used right Blockchain URL in .env Eg: VMBC_URL=&quot;http://x.x.x.x:8545&quot;</li><li>In the testReadWrite.js, enable permissioning flag by calling usePrivatekeyForPermissioning()</li><li>Remember, only admin has the permissions to give permissions to other users, hence for checkPermissions() and addPermissions() functions, you have to use usePrivatekeyForPermissioning(ADMIN_ACCOUNT_PRIVATE_KEY). Other function calls like any read from blockchain or any write to blockchain, you have to use usePrivatekeyForPermissioning(String(accountKeyPair.privateKey)).</li><li><code>npm install</code></li><li><code>node testReadWrite.js</code></li></ol>',3),r=[s];function a(c,l){return i(),o("div",null,r)}const h=e(n,[["render",a],["__file","index.html.vue"]]);export{h as default};
