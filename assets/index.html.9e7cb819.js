import{_ as t,o as e,c as a,e as s}from"./app.e4b6e09b.js";const n={},r=s(`<h2 id="host-system-pre-requisites" tabindex="-1"><a class="header-anchor" href="#host-system-pre-requisites" aria-hidden="true">#</a> Host system pre-requisites</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl ( https://kubernetes.io/docs/tasks/tools/ )
helm chart ( https://helm.sh/docs/intro/install/ )
(optional) minikube (https://minikube.sigs.k8s.io/docs/start/)
(optional) eksctl (https://eksctl.io/)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deploy-vmware-blockchain-erc20-token-transfer-test" tabindex="-1"><a class="header-anchor" href="#deploy-vmware-blockchain-erc20-token-transfer-test" aria-hidden="true">#</a> Deploy VMware Blockchain erc20 token transfer test</h3><ul><li>Deployment with parameters. Replace the blockchainUrl value with the Eth RPC service URL.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Change to Helm Chart directory of ERC20 Test Tool Sample dApp</span>
<span class="token builtin class-name">cd</span> vmware-blockchain-samples/vmbc-ethereum/sample-dapps/erc20-test-tool/helm-chart

<span class="token comment"># Helm install ERC20 Test Tool Sample dApp</span>
helm <span class="token function">install</span> <span class="token operator">&lt;</span>name-of-your-choice<span class="token operator">&gt;</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.registry</span><span class="token operator">=</span><span class="token operator">&lt;</span>registry<span class="token operator">&gt;</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.username</span><span class="token operator">=</span><span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.password</span><span class="token operator">=</span><span class="token operator">&lt;</span>password<span class="token operator">&gt;</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">blockchainUrl</span><span class="token operator">=</span><span class="token operator">&lt;</span>blockchainURL<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="run-vmware-blockchain-erc20-token-transfer-test" tabindex="-1"><a class="header-anchor" href="#run-vmware-blockchain-erc20-token-transfer-test" aria-hidden="true">#</a> Run VMware Blockchain erc20 token transfer test</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token builtin class-name">test</span> <span class="token operator">&lt;</span>name-of-your-choice<span class="token operator">&gt;</span> <span class="token parameter variable">--logs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="remove-vmware-blockchain-erc20-token-transfer-test-optional" tabindex="-1"><a class="header-anchor" href="#remove-vmware-blockchain-erc20-token-transfer-test-optional" aria-hidden="true">#</a> Remove VMware Blockchain erc20 token transfer test ( optional )</h3><ul><li>Uninstall<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm uninstall <span class="token operator">&lt;</span>name-of-your-choice<span class="token operator">&gt;</span> <span class="token operator">&amp;&amp;</span> kubectl delete pod <span class="token operator">&lt;</span>name-of-your-choice<span class="token operator">&gt;</span>-test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="vmware-blockchain-erc20-token-transfer-test-deployment" tabindex="-1"><a class="header-anchor" href="#vmware-blockchain-erc20-token-transfer-test-deployment" aria-hidden="true">#</a> VMware Blockchain erc20 token transfer test deployment</h2><ul><li>List of configurations available for VMware Blockchain erc20 token transfer test deployment. Use &quot;--set&quot; param for setting up the params.</li></ul><table><thead><tr><th>Name</th><th>Description</th><th>Value</th><th>Type</th></tr></thead><tbody><tr><td>global.imageCredentials.registry</td><td>Url to download python image</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.imageCredentials.username</td><td>Username to access/download python image</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.imageCredentials.password</td><td>Password to access/download python image</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.imageCredentials.email</td><td>Email to access/download python image</td><td>&quot;&quot;</td><td>Optional</td></tr><tr><td>global.image.repository</td><td>Image name to download for python image</td><td>vmwblockchain/erc20-python</td><td>Optional</td></tr><tr><td>global.image.tag</td><td>Tag version to download python image</td><td>&quot;1.0&quot;</td><td>Optional</td></tr><tr><td>blockchainUrl</td><td>Url to link blockchain with vmbc erc20 token transfer test</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>testCount</td><td>Number of erc20 token transfer test</td><td>2</td><td>Optional</td></tr><tr><td>resources.erc20test.cpuLimit</td><td>CPU limit</td><td>100m</td><td>Optional</td></tr><tr><td>resources.erc20test.cpuRequest</td><td>CPU request</td><td>100m</td><td>Optional</td></tr><tr><td>resources.erc20test.memoryLimit</td><td>Memory limit</td><td>1Gi</td><td>Optional</td></tr><tr><td>resources.erc20test.memoryRequest</td><td>Memory request</td><td>1Gi</td><td>Optional</td></tr></tbody></table>`,11),o=[r];function l(d,i){return e(),a("div",null,o)}const p=t(n,[["render",l],["__file","index.html.vue"]]);export{p as default};
