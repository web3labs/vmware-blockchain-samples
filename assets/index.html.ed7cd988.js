import{_ as l,r as i,o as r,c as p,a,b as s,d as e,w as t,e as o}from"./app.e4b6e09b.js";const c={},d=a("h1",{id:"vmware-blockchain-four-node-one-client-sample-deployment-with-logging",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#vmware-blockchain-four-node-one-client-sample-deployment-with-logging","aria-hidden":"true"},"#"),s(" VMware Blockchain Four Node One Client Sample Deployment With Logging")],-1),u=a("p",null,"The sample VMware Blockchain for Ethereum deployment includes a set of Helm charts for four Replica nodes and one Client node. The deployment on Kubernetes must only be on a supported host with a single cluster.",-1),h=a("p",null,"Replica nodes are the participants in the consensus algorithm, concord-bft. Client nodes are the clients in the blockchain network running ethrpc.",-1),m=a("p",null,"The current sample deployment has been tested on the following components:",-1),b=a("ul",null,[a("li",null,"Minikube with VirtualBox, Hyperkit and Docker drivers")],-1),v=a("h2",{id:"prerequisites",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),s(" Prerequisites")],-1),k=o(`<h3 id="elk-setup" tabindex="-1"><a class="header-anchor" href="#elk-setup" aria-hidden="true">#</a> ELK Setup</h3><h4 id="install-elasticsearch-logstash-and-kibana" tabindex="-1"><a class="header-anchor" href="#install-elasticsearch-logstash-and-kibana" aria-hidden="true">#</a> Install Elasticsearch, Logstash and Kibana</h4><ul><li><p>Add helm repo if not already added</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo <span class="token function">add</span> elastic https://helm.elastic.co
helm repo <span class="token function">add</span> prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Install Elasticsearch</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">ELASTICSEARCH<span class="token bash punctuation"> <span class="token operator">|</span> helm <span class="token function">install</span> elasticsearch elastic/elasticsearch <span class="token parameter variable">--version</span> <span class="token number">7.17</span>.3 <span class="token parameter variable">-f</span> -</span>
antiAffinity: &quot;soft&quot;
esJavaOpts: &quot;-Xmx256m -Xms256m&quot;
resources:
  requests:
   cpu: &quot;100m&quot;
   memory: &quot;1024M&quot;
  limits:
   cpu: &quot;1000m&quot;
   memory: &quot;1024M&quot;
volumeClaimTemplate:
  storageClassName: &quot;standard&quot;
  resources:
    requests:
     storage: &quot;200M&quot;
ELASTICSEARCH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Install Kibana</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">KIBANA<span class="token bash punctuation"> <span class="token operator">|</span> helm <span class="token function">install</span> kibana elastic/kibana <span class="token parameter variable">--version</span> <span class="token number">7.17</span>.3 <span class="token parameter variable">-f</span> -</span>
KIBANA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Install logstash</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">LOGSTASH<span class="token bash punctuation"> <span class="token operator">|</span> helm <span class="token function">install</span> logstash elastic/logstash <span class="token parameter variable">--version</span> <span class="token number">7.17</span>.3 <span class="token parameter variable">-f</span> -</span>
persistence:
  enabled: true
logstashConfig:
  logstash.yml: |
    http.host: 0.0.0.0
    xpack.monitoring.enabled: false
logstashPipeline:
  vmbc.conf: | 
    input {
       http {
         id =&gt; &quot;vmbc-logs&quot;
       }
    }
    filter {
       split {
       }
       json {
         source =&gt; &quot;message&quot;
       }
       date {
         match =&gt; [ &quot;logtime&quot;, &quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;,&#39;SSS&#39;,&#39;Z&quot;, &quot;yyyy-MM-dd HH:mm:ss&#39;,&#39;SSS&quot; ]
       }
       mutate {
         remove_field =&gt; [ &quot;host&quot;, &quot;headers&quot;, &quot;logtime&quot; ]
       }
    }
    output {
       elasticsearch {
         hosts =&gt; [ &quot;elasticsearch-master.default.svc.cluster.local:9200&quot; ]
         data_stream =&gt; &quot;true&quot;
       }
    }
service:
  type: ClusterIP
  ports:
     - name: http
       port: 8080
       protocol: TCP
       targetPort: 8080
LOGSTASH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="vmware-blockchain-four-node-one-client-deployment" tabindex="-1"><a class="header-anchor" href="#vmware-blockchain-four-node-one-client-deployment" aria-hidden="true">#</a> VMware Blockchain four node one client deployment</h2><p>The below section explains how to install VMware Blockchain four node one client deployment on minikube.</p><h3 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h3><h4 id="deploy" tabindex="-1"><a class="header-anchor" href="#deploy" aria-hidden="true">#</a> Deploy</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> <span class="token operator">&lt;</span>name of blockchain<span class="token operator">&gt;</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.registry</span><span class="token operator">=</span><span class="token operator">&lt;</span>registry address<span class="token operator">&gt;</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.username</span><span class="token operator">=</span><span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">global.imageCredentials.password</span><span class="token operator">=</span><span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note that it may take upto 5 mins for the blockchain to be operational the first time it&#39;s deployed. Please wait for 5 mins or until you see <code>client_id=8 is serving - the pool is ready</code> in the <code>vmbc-deployment-client-0-clientservice-xxx-yyy</code> pod logs.</p><h4 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> Test</h4><ul><li><p>Get ethrpc endpoint</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>minikube <span class="token function">service</span> list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note: If you don&#39;t see a URL using the above command then try <code>minikube service client-0-ethrpc</code></p></li><li><p>Run ethrpc curl</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;Accept: application/json&quot;</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;id&quot;: 1, &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;method&quot;: &quot;eth_getBlockByNumber&quot;, &quot;params&quot;: [&quot;0x00&quot;, true]}&#39;</span> <span class="token operator">&lt;</span>ethrpc url from above<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You should see a sample output similar to below</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;jsonrpc&quot;</span><span class="token operator">:</span><span class="token string">&quot;2.0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;method&quot;</span><span class="token operator">:</span><span class="token string">&quot;eth_getBlockByNumber&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;result&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;extraData&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;gasLimit&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x7fffffffffffffff&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;gasUsed&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;hash&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x92e4414494ec1b4752faea0d80e79f618d447743f32eff4153c5e391be1d1a88&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;miner&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x52a06a6cBEF9543244C530F52b602712FE5dfb74&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0000000000000000&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;number&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;parentHash&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;stateRoot&quot;</span><span class="token operator">:</span><span class="token string">&quot;0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x1669680399&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;transactions&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;blockHash&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x92e4414494ec1b4752faea0d80e79f618d447743f32eff4153c5e391be1d1a88&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;blockNumber&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;contractAddress&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;from&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0000000000000000000000000000000000000000&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;gas&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;gasPrice&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;hash&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x77f5bd9e7dbe2c2772f58f53431dfdfa205991ec4ff0b2bc385adecefd8895be&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;input&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;logs&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;to&quot;</span><span class="token operator">:</span><span class="token string">&quot;0xfb389874fb4e03182a7358275eaf78008775c7ed&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;transactionIndex&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token string">&quot;0x0000000000000000000000000000000000000000000000007fffffffffffffff&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,11),g=o(`<h4 id="view-logs-in-kibana" tabindex="-1"><a class="header-anchor" href="#view-logs-in-kibana" aria-hidden="true">#</a> View logs in Kibana</h4><ul><li>Open a port-forward to Kibana<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl port-forward svc/kibana-kibana <span class="token number">5601</span>:5601
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Open the following page to see logs http://localhost:5601/app/discover#</li><li>On first open, it will ask to create an index.</li><li>Click on &quot;Create index pattern&quot;</li><li>Type logs-generic-default* in the Name field and select the @timestamp field from the Timestamp field drop down. If you don&#39;t see logs-generic-default, wait a few minutes for the index to be created after a blockchain has been deployed. If you haven&#39;t deployed a blockchain yet, then you will have to return to this page after the blockchain is deployed. The index is automatically created when the first blockchain is deployed.</li><li>After you click Create index pattern on the page above, you should see a page to customize the index fields. You can leave this page as is as the defaults are fine.</li><li>Now you can search and view logs on this page: http://localhost:5601/app/discover#. You can filter logs based on blockhain ID, service name etc.</li></ul><h4 id="uninstall" tabindex="-1"><a class="header-anchor" href="#uninstall" aria-hidden="true">#</a> Uninstall</h4><h5 id="uninstall-blockchain" tabindex="-1"><a class="header-anchor" href="#uninstall-blockchain" aria-hidden="true">#</a> Uninstall Blockchain</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm uninstall <span class="token operator">&lt;</span>name of blockchain<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="uninstall-elk" tabindex="-1"><a class="header-anchor" href="#uninstall-elk" aria-hidden="true">#</a> Uninstall ELK</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm delete elasticsearch 
helm delete logstash
helm delete kibana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="detailed-configurations-for-customization" tabindex="-1"><a class="header-anchor" href="#detailed-configurations-for-customization" aria-hidden="true">#</a> Detailed configurations for customization</h3><ul><li>Configurations List of available configurations in values.yaml. Use &quot;--set&quot; param for setting up the params.</li></ul><table><thead><tr><th>Name</th><th>Description</th><th>Value</th><th>Type</th></tr></thead><tbody><tr><td>global.imageCredentials.registry</td><td>Container registry for image downloads</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.imageCredentials.username</td><td>Username to access/download for registry</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.imageCredentials.password</td><td>Password to access/download for registry</td><td>&quot;&quot;</td><td>Mandatory</td></tr><tr><td>global.storageClass</td><td>Storage class for deployment</td><td>standard</td><td>Optional</td></tr><tr><td>global.ethPermissioningWriteEnabled</td><td>eth write permission enabled</td><td>false</td><td>Optional</td></tr><tr><td>global.ethPermissioningReadEnabled</td><td>eth read permission enabled</td><td>false</td><td>Optional</td></tr><tr><td>logManagement.endpoint_1.url</td><td>logstash endpoint url</td><td>http://logstash-logstash.default.svc.cluster.local</td><td>Optional</td></tr><tr><td>logManagement.endpoint_1.username</td><td>logstash setup username</td><td>&quot;&quot;</td><td>Optional</td></tr><tr><td>logManagement.endpoint_1.password</td><td>logstash setup port</td><td>&quot;&quot;</td><td>Optional</td></tr><tr><td>genesisBlock.timestamp</td><td>blockchain creation time in UTC, 24 hours format - YYYY-MM-DD hh:mm:ss</td><td>2022-12-02 00:01:00</td><td>Optional</td></tr></tbody></table><h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h3>`,11);function q(f,y){const n=i("RouterLink");return r(),p("div",null,[d,u,h,m,b,v,a("p",null,[s("Make sure that you implement all the required prerequisites. See "),e(n,{to:"/vmbc-deployment/"},{default:t(()=>[s("Deployment Prerequisites")]),_:1}),s(".")]),k,a("p",null,[s("See "),e(n,{to:"/vmbc-deployment/Troubleshooting.html"},{default:t(()=>[s("Troubleshooting")]),_:1}),s(" for any errors.")]),g,a("p",null,[s("The most common problems and errors are addressed with probable solutions to troubleshoot the problem. See, "),e(n,{to:"/vmbc-deployment/Troubleshooting.html"},{default:t(()=>[s("Troubleshooting")]),_:1}),s(".")])])}const w=l(c,[["render",q],["__file","index.html.vue"]]);export{w as default};
