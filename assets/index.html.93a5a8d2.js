import{_ as r,r as l,o as c,c as d,a as e,b as a,d as n,w as s,e as i}from"./app.e4b6e09b.js";const p={},h=i('<h1 id="erc20-swap" tabindex="-1"><a class="header-anchor" href="#erc20-swap" aria-hidden="true">#</a> ERC20-Swap</h1><p>This is a Ethereum Sample dApp which comes with few pre-deployed ERC20 based smart contracts. Few of the Ethereum Accounts are are pre-supplied with tokens to get started.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li>Transfer two types of ERC20 based Tokens across accounts <ul><li>GST and SCT</li></ul></li><li>Swap Tokens among these two types with customizable rate <ul><li>SCT to GST</li><li>GST to SCT</li></ul></li></ul><h2 id="pre-requisites" tabindex="-1"><a class="header-anchor" href="#pre-requisites" aria-hidden="true">#</a> Pre-requisites</h2>',5),u=e("li",null,"VMware Blockchain has been deployed",-1),m=e("li",null,"MAC Operating System",-1),k=e("li",null,"Google Chrome browser",-1),b={href:"https://metamask.io/",target:"_blank",rel:"noopener noreferrer"},f=i(`<h2 id="running-dapp" tabindex="-1"><a class="header-anchor" href="#running-dapp" aria-hidden="true">#</a> Running dApp</h2><p>There are two ways to run this dApp</p><h3 id="command-line-based" tabindex="-1"><a class="header-anchor" href="#command-line-based" aria-hidden="true">#</a> Command Line Based</h3><ul><li>This option is only supported for MAC Operating System</li><li>Execute following commands to run the dApp through command line</li><li>At command line, this app defaults to port <code>3000</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Change to Source Directory of ERC20-Swap dApp</span>
<span class="token builtin class-name">cd</span> vmware-blockchain-samples/vmbc-ethereum/sample-dapps/erc20-swap/source/erc20-swap

<span class="token comment"># Install the dependencies</span>
<span class="token function">npm</span> <span class="token function">install</span>

<span class="token comment"># Export the VMBC_URL to the URL of deployed instance of VMware Blockchain</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">VMBC_URL</span><span class="token operator">=</span>http://127.0.0.1:8545

<span class="token comment"># Run the dApp</span>
<span class="token function">npm</span> run start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The dApp website will be available on <code>http://localhost:3000</code></p><h3 id="helm-based" tabindex="-1"><a class="header-anchor" href="#helm-based" aria-hidden="true">#</a> Helm Based</h3>`,7),w=e("h2",{id:"using-dapp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-dapp","aria-hidden":"true"},"#"),a(" Using dApp")],-1),_={href:"https://github.com/vmware-samples/vmware-blockchain-samples/blob/master/vmbc-ethereum/sample-dapps/erc20-swap/source/erc20-swap/.env",target:"_blank",rel:"noopener noreferrer"},v=i('<h3 id="transfer-tokens" tabindex="-1"><a class="header-anchor" href="#transfer-tokens" aria-hidden="true">#</a> Transfer Tokens</h3><ul><li>Select a token from drop down</li><li>Enter address of an Ethereum Account to which to transfer the tokens</li><li>Enter the amount of tokens to send</li><li>Click on <code>TRANSFER</code> button</li><li>Interact with Metamask Pop Up Window to complete this Transaction</li></ul><h3 id="swap-tokens" tabindex="-1"><a class="header-anchor" href="#swap-tokens" aria-hidden="true">#</a> Swap Tokens</h3><ul><li>The Token selected on the top of the page acts as From Type for the Swap</li><li>Select the Token to Swap to</li><li>Enter the amount to swap</li><li>Click on <code>SWAP</code> button</li><li>Interact with Metamask Pop Up Window to complete this Transaction</li></ul>',4);function g(x,S){const o=l("ExternalLinkIcon"),t=l("RouterLink");return c(),d("div",null,[h,e("ul",null,[u,e("li",null,[a("Suggested and Supported Stack "),e("ul",null,[m,k,e("li",null,[a("Metamask Wallet - "),e("a",b,[a("https://metamask.io/"),n(o)])])])]),e("li",null,[a("Setting up Metamask for VMware Blockchain "),e("ul",null,[e("li",null,[a("Connecting Metamask to VMware Blockchain- "),n(t,{to:"/appendix.html#connecting-metamask-to-vmware-blockchain"},{default:s(()=>[a("See Appendix")]),_:1})]),e("li",null,[a("Reset Metamask Accounts - "),n(t,{to:"/appendix.html#resetting-account-in-metamask"},{default:s(()=>[a("See Appendix")]),_:1})])])])]),f,e("p",null,[a("Follow the instructions in "),n(t,{to:"/sample-dapps/erc20-swap/helm-chart/"},{default:s(()=>[a("helm-chart/README")]),_:1})]),w,e("p",null,[a("The accounts mentioned in "),e("a",_,[a("Accounts with Tokens"),n(o)]),a(" are pre-supplied with tokens. You can use "),n(t,{to:"/appendix.html#importing-accounts-in-metamask"},{default:s(()=>[a("this guide in Appendix")]),_:1}),a(" to import these accounts into your Metamask wallet.")]),v])}const A=r(p,[["render",g],["__file","index.html.vue"]]);export{A as default};
